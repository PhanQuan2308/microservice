spring.application.name=product-service
server.port=8082

# Eureka Server URL
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true


spring.datasource.url=jdbc:mysql://localhost:3306/productdb
spring.datasource.username=root
spring.datasource.password=

spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect


spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=my-group
spring.kafka.consumer.auto-offset-reset=earliest
    spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer


spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=20MB


logging.level.org.example.productservice=INFO
logging.level.org.springframework.web=INFO

spring.web.resources.static-locations=file:uploads/
logging.level.org.example.productservice.controller=INFO


cloudinary.cloud_name=dqxwhjw5y
cloudinary.api_key=824159424695743
cloudinary.api_secret=2zQK111PGMa8GfrISY7wK7bdriA

logging.level.org.example.productservice.service=DEBUG

spring.kafka.listener.max-attempts=3
spring.kafka.listener.backoff.initial-interval=1000
spring.kafka.listener.backoff.max-interval=10000
spring.kafka.listener.backoff.multiplier=2.0


spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.password=
spring.data.redis.database=0

spring.data.redis.pool.max-active=10
spring.data.redis.pool.max-idle=5
spring.data.redis.pool.min-idle=1
spring.data.redis.pool.max-wait=2000
edis.pool.max-wait=2000